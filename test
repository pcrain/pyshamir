#!/usr/bin/python

import pygarble.alice as alice
import pygarble.bob as bob
import json
import ast
import re
import sys

BOBS_INPUT = [0, 1, 0, 1]

class col:
  BLN      ='\033[0m'            # Blank
  UND      ='\033[1;4m'          # Underlined
  INV      ='\033[1;7m'          # Inverted
  CRT      ='\033[1;41m'         # Critical
  BLK      ='\033[1;30m'         # Black
  RED      ='\033[1;31m'         # Red
  GRN      ='\033[1;32m'         # Green
  YLW      ='\033[1;33m'         # Yellow
  BLU      ='\033[1;34m'         # Blue
  MGN      ='\033[1;35m'         # Magenta
  CYN      ='\033[1;36m'         # Cyan
  WHT      ='\033[1;37m'         # White

on_input_gates = [
  [0, "AND", [0, 1]],
  [1, "XOR", [2, 3]],
  [2, "OR", [0,3]]
]
mid_gates = [
  [3, "XOR", [0, 1]],
  [4, "OR", [1, 2]]
]
output_gates = [
  [5, "OR", [3, 4]],
  [6, "XOR", [3, 4]],
  [7, "OR", [3, 4]]
]
mycirc = alice.Circuit(4, on_input_gates, mid_gates, output_gates)

my_input = [x[y] for x, y in zip(mycirc.poss_inputs, BOBS_INPUT)]
# mycirc.fire(my_input)

# print(col.YLW+str(mycirc.poss_inputs)+col.BLN)
# print(my_input)
mydata = mycirc.fire(my_input)
keys = sorted(mydata.keys())
s = len(keys)
i = 0
n = 0
for m in keys:
  i += 1
  # print(mydata[m])
  num = int.from_bytes(mydata[m],'big')
  num *= pow(2,s-i)
  n += num
print(n)

sys.exit()

j = mycirc.prep_for_json()
# print(col.CYN+str(j)+col.BLN)
with open("circuit.json", 'w') as outfile:
  json.dump(j, outfile)

# with open("circuit.json", 'w') as outfile:
#   # s = str(j).replace("'",'"')
#   # s = re.sub(r'([0-9])+:',r'"\1":',s)
#   # s = re.sub(r'b"([^"]+)"',r'"\1"',s)
#   outfile.write(s)

with open("circuit.json", 'r') as infile:
  # json_data = ast.literal_eval(infile.read())
  json_data = json.load(infile)

# print(col.GRN+str(json_data)+col.BLN)


mycirc = bob.Circuit(json_data)
# print(col.RED+str(mycirc.poss_inputs)+col.BLN)
# inp = [
#   b'4diGEaU1jdM3Pu-BJNSP9g7_QPc4ujAzGxl2BGoVG0M=',
#   b'BfBToX-S0Jqxb5wA1nhFHga-QILPsYzRMRbmuVHgNa8=',
#   b'louVKwBH3BVABygcEjSd_oZboJBUUFVSoS67q_YLu9E=',
#   b'H27Eo04R8_6S9xAMYFo8sxzn_VmJITg9-joTa1HNTzI=',
# ]
# mycirc.fire(inp)
